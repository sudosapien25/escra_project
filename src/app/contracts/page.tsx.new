'use client';

import React, { useState } from 'react';
import { FaSearch, FaFilter, FaFileAlt, FaCheckCircle, FaClock, FaCalendarAlt, FaSort, FaPlus, FaArrowUp, FaDollarSign } from 'react-icons/fa';
import { FaArrowUpFromBracket } from 'react-icons/fa6';
import { HiOutlineDocumentText, HiOutlineEye, HiOutlineDownload, HiOutlineTrash, HiOutlinePencilAlt, HiOutlineDocument, HiOutlineDocumentDownload } from 'react-icons/hi';

interface Contract {
  id: string;
  title: string;
  parties: string;
  status: string;
  updated: string;
  value?: string;
  documents?: number;
}

const ContractsPage: React.FC = () => {
  const [activeTab, setActiveTab] = useState('allContracts');
  const [activeContentTab, setActiveContentTab] = useState('contractList');
  const [searchTerm, setSearchTerm] = useState('');
  const [showFilters, setShowFilters] = useState(false);

  const TABS = [
    { key: 'allContracts', label: 'All Contracts' },
    { key: 'createdMe', label: 'Created by Me' },
    { key: 'assignedMe', label: 'Assigned to Me' },
  ];

  const CONTENT_TABS = [
    { key: 'contractList', label: 'Contract List' },
    { key: 'documents', label: 'Documents' },
  ];

  const handleSearchChange = (event: React.ChangeEvent<HTMLInputElement>) => {
    setSearchTerm(event.target.value);
  };

  // Sample data
  const sampleContracts: Contract[] = [
    // ... your existing contract data ...
  ];

  // Filter contracts based on the active tab and search term
  const filteredContracts = sampleContracts.filter((contract) => {
    const matchesSearch = 
      contract.title.toLowerCase().includes(searchTerm.toLowerCase()) ||
      contract.parties.toLowerCase().includes(searchTerm.toLowerCase()) ||
      contract.id.toLowerCase().includes(searchTerm.toLowerCase());
      
    const matchesTab = activeTab === 'allContracts' || 
                     (activeTab === 'createdMe' && ['9548', '9145', '8423', '6891'].includes(contract.id)) ||
                     (activeTab === 'assignedMe' && ['9550', '8784', '7804', '7234', '9102', '6453'].includes(contract.id));
    return matchesSearch && matchesTab;
  });

  const getStatusBadgeStyle = (status: string) => {
    switch (status) {
      case 'Initiated': return 'bg-blue-100 text-blue-800';
      case 'Preparation': return 'bg-yellow-100 text-yellow-800';
      case 'Wire Details': return 'bg-orange-100 text-orange-800';
      case 'Signature Flow': return 'bg-purple-100 text-purple-800';
      case 'Funds Disbursed': return 'bg-teal-100 text-teal-800';
      case 'Completed': return 'bg-green-100 text-green-800';
      case 'Verified': return 'bg-green-100 text-green-800';
      case 'Pending': return 'bg-yellow-100 text-yellow-800';
      case 'Rejected': return 'bg-red-100 text-red-800';
      default: return 'bg-gray-100 text-gray-800';
    }
  };

  return (
    <div className="space-y-4">
      {/* Header Section */}
      <div className="flex justify-between items-center">
        <div className="pb-1">
          <h1 className="text-[30px] font-bold text-black mb-0">Contracts</h1>
          <p className="text-gray-500 text-[16px] mt-0">
            Manage and monitor all your escrow contracts <span className="text-primary font-semibold">Logged in as: Creator</span>
          </p>
        </div>
        <button className="flex items-center px-4 py-2 bg-primary text-white rounded-lg hover:bg-primary-dark transition-colors text-sm font-semibold">
          <FaPlus className="mr-2 text-base" />
          New Contract
        </button>
      </div>

      <hr className="my-6 border-gray-300" />

      {/* Main Content Area */}
      <div className="flex space-x-6">
        {/* Left Sidebar */}
        <div className="flex flex-col space-y-6" style={{ width: '300px' }}>
          {/* Switch Role Section */}
          <div className="bg-white rounded-xl border border-gray-300 p-6">
            <div className="text-gray-700 font-semibold text-sm mb-2">Switch Role:</div>
            <div className="inline-flex rounded-md shadow-sm border border-gray-300">
              <button className="px-4 py-2 text-sm font-medium text-gray-700 bg-white rounded-l-md hover:bg-gray-50 focus:z-10 focus:outline-none focus:border-primary focus:ring focus:ring-primary-light">Admin</button>
              <button className="px-4 py-2 text-sm font-medium text-white bg-primary z-10 hover:bg-primary-dark focus:outline-none focus:border-primary focus:ring focus:ring-primary-light">Creator</button>
              <button className="px-4 py-2 text-sm font-medium text-gray-700 bg-white hover:bg-gray-50 focus:z-10 focus:outline-none focus:border-primary focus:ring focus:ring-primary-light">Editor</button>
              <button className="px-4 py-2 text-sm font-medium text-gray-700 bg-white rounded-r-md hover:bg-gray-50 focus:z-10 focus:outline-none focus:border-primary focus:ring focus:ring-primary-light">Viewer</button>
            </div>
          </div>

          {/* Top Tabs */}
          <div className="bg-white rounded-xl border border-gray-300 p-6">
            <div className="flex flex-col space-y-2">
              {TABS.map((tab) => (
                <button
                  key={tab.key}
                  className={`text-sm font-semibold py-2 px-4 text-left transition-colors duration-200 rounded-md ${
                    activeTab === tab.key ? 'bg-teal-100 text-primary' : 'text-gray-700 hover:bg-gray-50'
                  }`}
                  onClick={() => setActiveTab(tab.key)}
                >
                  {tab.label}
                </button>
              ))}
            </div>
          </div>
        </div>

        {/* Right Main Content */}
        <div className="flex-1 bg-white rounded-xl border border-gray-300 p-6">
          {/* Search and Filters */}
          <div className="flex flex-col md:flex-row md:items-center md:justify-between gap-4 mb-6">
            <div className="relative flex-grow">
              <input
                type="text"
                placeholder="Search contracts or parties"
                className="w-full pl-10 pr-4 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-2 focus:ring-primary"
                value={searchTerm}
                onChange={handleSearchChange}
              />
              <FaSearch className="absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400" />
            </div>
            <div className="flex items-center space-x-4">
              <button
                className="flex items-center px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm"
                onClick={() => setShowFilters(!showFilters)}
              >
                <FaFilter className="mr-2" />
                All Statuses
                <FaSort className="ml-2 text-xs" />
              </button>
              <button className="flex items-center px-4 py-2 border border-gray-300 rounded-md text-gray-700 hover:bg-gray-50 text-sm">
                <FaCalendarAlt className="mr-2" />
                Last 30 Days
                <FaSort className="ml-2 text-xs" />
              </button>
            </div>
          </div>

          {/* Content Tabs */}
          <div className="border-b border-gray-200 mb-6">
            <div className="flex space-x-8">
              {CONTENT_TABS.map((tab) => (
                <button
                  key={tab.key}
                  className={`pb-4 text-sm font-semibold ${
                    activeContentTab === tab.key
                      ? 'text-primary border-b-2 border-primary'
                      : 'text-gray-500 hover:text-gray-700'
                  }`}
                  onClick={() => setActiveContentTab(tab.key)}
                >
                  {tab.label}
                </button>
              ))}
            </div>
          </div>

          {/* Table */}
          <div className="overflow-x-auto">
            <table className="min-w-full divide-y divide-gray-200">
              <thead className="bg-gray-50">
                <tr>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Contract</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Parties</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Status</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Updated</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Value</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Documents</th>
                  <th className="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">Actions</th>
                </tr>
              </thead>
              <tbody className="bg-white divide-y divide-gray-200">
                {filteredContracts.map((contract) => (
                  <tr key={contract.id} className="hover:bg-gray-50">
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="flex items-center">
                        <div className="flex-shrink-0 h-10 w-10 flex items-center justify-center bg-gray-100 rounded-lg">
                          <HiOutlineDocumentText className="h-6 w-6 text-gray-500" />
                        </div>
                        <div className="ml-4">
                          <div className="text-sm font-medium text-gray-900">{contract.title}</div>
                          <div className="text-sm text-gray-500">#{contract.id}</div>
                        </div>
                      </div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <div className="text-sm text-gray-900">{contract.parties}</div>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap">
                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full ${getStatusBadgeStyle(contract.status)}`}>
                        {contract.status}
                      </span>
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {contract.updated}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-900">
                      {contract.value}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                      {contract.documents}
                    </td>
                    <td className="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                      <div className="flex items-center space-x-3">
                        <button className="text-gray-400 hover:text-gray-500">
                          <HiOutlineEye className="h-5 w-5" />
                        </button>
                        <button className="text-gray-400 hover:text-gray-500">
                          <HiOutlineDownload className="h-5 w-5" />
                        </button>
                        <button className="text-gray-400 hover:text-gray-500">
                          <HiOutlineTrash className="h-5 w-5" />
                        </button>
                      </div>
                    </td>
                  </tr>
                ))}
              </tbody>
            </table>
          </div>
        </div>
      </div>
    </div>
  );
};

export default ContractsPage; 